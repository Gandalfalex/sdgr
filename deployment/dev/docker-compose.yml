services:
  traefik:
    image: traefik:v3.2.3
    container_name: traefik-proxy
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.kafka.address=:9092
      - --providers.docker.network=sus-network
      - --providers.docker.exposedbydefault=false
      - --log.level=TRACE
    ports:
      - "80:80"
      - "443:443"
      - "8090:8090"
      - "9092:9092" # Kafka broker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml
    networks:
      - sus-network
    restart: unless-stopped

  db:
    image: postgres:14
    container_name: sus-db-dev
    environment:
      - POSTGRES_USER=sample
      - POSTGRES_PASSWORD=sample
    ports:
      - "5432:5432"
    networks:
      sus-network:
        aliases:
          - db-alias
    restart: unless-stopped

  django:
    build:
      context: ../../data-training-app/djangoProject
    container_name: django-dev
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://db-alias:5432/postgres
      - DATABASE_ALIAS=db-alias
      - REDIS_ALIAS=redis-alias
      - DJANGO_SETTINGS_MODULE=djangoProject.settings
    networks:
      sus-network:
        aliases:
          - django-alias
    restart: unless-stopped

  springapp:
    build:
      context: ../../spring-backend
    container_name: spring-backend-dev
    networks:
      sus-network:
        aliases:
          - springapp-alias
    depends_on:
      - db
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-alias:5432/postgres
      - SPRING_DATASOURCE_USERNAME=sample
      - SPRING_DATASOURCE_PASSWORD=sample
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - KAFKA_BOOTSTRAP_URL=kafka-alias:9093
      - DJANGO_REST_BASE_URL=http://django-alias:8000/django/api/v1
    restart: unless-stopped

  frontend:
    build:
      context: ../../frontend
    container_name: react-dev
    networks:
      sus-network:
        aliases:
          - frontend-alias
    labels:
      - traefik.http.routers.frontend.service=frontend
      - traefik.enable=true
      - traefik.http.routers.nginx.rule=(Host(`t123abcdefg.mooo.com`) || Host(`localhost`))
      - traefik.http.routers.nginx.entrypoints=web
      - traefik.http.services.nginx.loadbalancer.server.port=3000
    ports:
      - "3000:3000"
    restart: unless-stopped

  redis:
    image: "redis:alpine"
    container_name: redis-dev
    ports:
      - "6379:6379"
    networks:
      sus-network:
        aliases:
          - redis-alias
    restart: unless-stopped

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: sus-zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped
    networks:
      sus-network:
        aliases:
          - zoo-alias

  kafka:
    image: wurstmeister/kafka
    container_name: sus-kafka
    ports:
      - "9093:9093"
    networks:
      sus-network:
        aliases:
          - kafka-alias
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zoo-alias:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-alias:9093,OUTSIDE://traefik-alias:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.kafka.entrypoints=kafka"
      - "traefik.http.routers.kafka.rule=PathPrefix(`/kafka`)"
      - "traefik.tcp.routers.kafka.rule=HostSNI(`*`)"
      - traefik.http.middlewares.kafka-stripprefix.stripprefix.prefixes=/kafka
      - "traefik.tcp.services.kafka.loadbalancer.server.port=9092"
    restart: unless-stopped

networks:
  sus-network:
    name: sus-network
    driver: bridge
    external: true
